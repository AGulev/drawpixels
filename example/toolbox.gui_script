local function pick_color(self, node, action)
  msg.post("canvas", "change_color", { color = gui.get_color(node) })
end

local function use_pencil()
  msg.post("canvas", "change_tool", { tool = "pencil" })
end

local function use_eraser()
  msg.post("canvas", "change_tool", { tool = "eraser" })
end

local function use_circle()
  msg.post("canvas", "change_tool", { tool = "circle" })
end

local function use_filled_circle()
  msg.post("canvas", "change_tool", { tool = "filled_circle" })
end

local function use_rect()
  msg.post("canvas", "change_tool", { tool = "rect" })
end

local function use_filled_rect()
  msg.post("canvas", "change_tool", { tool = "filled_rect" })
end

local function use_rotated_rect()
  msg.post("canvas", "change_tool", { tool = "rotated_rect" })
end

local function use_line()
  msg.post("canvas", "change_tool", { tool = "line" })
end

local function use_colorpicker()
  msg.post("canvas", "change_tool", { tool = "colorpicker" })
end

local function use_bezier()
  msg.post("canvas", "change_tool", { tool = "bezier" })
end

local function clear()
  msg.post("canvas", "clear")
end

function init(self)
  msg.post("canvas", "acquire_input_focus")
  msg.post("gui", "acquire_input_focus")
  self.nodes = {}

  self.nodes[gui.get_node("pencil")] = use_pencil
  self.nodes[gui.get_node("eraser")] = use_eraser
  self.nodes[gui.get_node("clear")] = clear
  self.nodes[gui.get_node("circle")] = use_circle
  self.nodes[gui.get_node("filled_circle")] = use_filled_circle
  self.nodes[gui.get_node("rect")] = use_rect
  self.nodes[gui.get_node("filled_rect")] = use_filled_rect
  self.nodes[gui.get_node("rotated_rect")] = use_rotated_rect
  self.nodes[gui.get_node("line")] = use_line
  self.nodes[gui.get_node("colorpicker")] = use_colorpicker
  self.nodes[gui.get_node("bezier")] = use_bezier
  for i = 1, 10 do
    self.nodes[gui.get_node("color" .. i)] = pick_color
  end
  use_pencil()
end

function on_input(self, action_id, action)
  if action_id == hash("touch") then
    if action.pressed or action.released then
      for node, fn in pairs(self.nodes) do
        if gui.pick_node(node, action.x, action.y) then
          fn(self, node, action)
          return true
        end
      end
    end
  end
  return false
end

function on_reload(self)
  -- Add input-handling code here
  -- Remove this function if not needed
end
